<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Agent Arachnids Anthology</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Agent Arachnids Anthology</description>
    <generator>Hugo</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 01 Oct 2025 13:54:48 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multiplayer Character Selection</title>
      <link>http://localhost:1313/personal-projects/multiplayercharacterselection/</link>
      <pubDate>Wed, 01 Oct 2025 13:54:48 +0100</pubDate>
      <guid>http://localhost:1313/personal-projects/multiplayercharacterselection/</guid>
      <description>Intro Being able to select a character to play as, is a vital component for some multiplayer and singleplayer games but there are a lot of ways that this can be achieved. Some of these methods are better than others, and will depend on the engine used. In this article, I will be using Unreal Engine 5, and so will be using one of the best workflows for it.&#xA;Overview I will be using the Seamless Travel feature of UE5 to maintain the data when we travel from the character selection screen to the game map.</description>
    </item>
    <item>
      <title>Besieged - a Historical Battle Board Game</title>
      <link>http://localhost:1313/professional-projects/besieged---a-historical-battle-board-game/</link>
      <pubDate>Sun, 23 Feb 2025 23:39:36 +0000</pubDate>
      <guid>http://localhost:1313/professional-projects/besieged---a-historical-battle-board-game/</guid>
      <description>Overview This is a board game that I developed in my first year of university with 2 friends, we developed it initially as an exercise in designing basic games.&#xA;The game is designed for 2 people, each one having access to a castle and a mine. Each turn ends when either a player voluntary ends their turn, or they have no available moves left.&#xA;Win Condition The main win condition is to capture the opponents keep.</description>
    </item>
    <item>
      <title>Data Validation - Unreal Engine 5 - C&#43;&#43;</title>
      <link>http://localhost:1313/personal-projects/data-validation/</link>
      <pubDate>Wed, 19 Feb 2025 18:01:19 +0000</pubDate>
      <guid>http://localhost:1313/personal-projects/data-validation/</guid>
      <description>Validating your own classes and data is a vital step in most projects, and especially with a lack of a proper QA department/step that cannot catch all bugs. Making sure that all the data that is cooked into the project is in the proper form that your code expects to, in order to execute as intended and prevent undefined behaviour whereever possible.&#xA;The first step on how to do this is to enable the Data Validation Plugin</description>
    </item>
    <item>
      <title>Burn Unit</title>
      <link>http://localhost:1313/university-projects/burn-unit/</link>
      <pubDate>Thu, 14 Nov 2024 11:46:29 +0100</pubDate>
      <guid>http://localhost:1313/university-projects/burn-unit/</guid>
      <description>This was my final year project, born out of my passion for a concept called games based learning and what I learned to call Serious Games. These are games that aim to teach the player something, a skill or piece of knowledge for example. In my case, initially I wanted to create a game solely dedicated to teaching the player how to perform first aid, at least to the degree that they&amp;rsquo;d be useful enough in an actual emergency situation until proper medical attention can be given.</description>
    </item>
    <item>
      <title>Loading Different Gamemodes on the Same Map - Unreal Engine 5</title>
      <link>http://localhost:1313/tutorials/loaddifferentgamemode/</link>
      <pubDate>Fri, 06 Sep 2024 12:43:31 +0100</pubDate>
      <guid>http://localhost:1313/tutorials/loaddifferentgamemode/</guid>
      <description>Being able to simply change the gamemode to play at runtime is a great idea for a lot of developers. It makes sense to be able to save time making one map, but make it playable for multiple game modes.&#xA;However, doing this has eluded many developers when it is actually quite simple to do when you know how to do it.&#xA;The trick is to use Travel URLs when moving between different maps.</description>
    </item>
    <item>
      <title>Generic Wave Function Collapse - Unreal Engine 5 - C&#43;&#43; Implementation</title>
      <link>http://localhost:1313/personal-projects/wavefunctioncollapse/</link>
      <pubDate>Wed, 04 Sep 2024 11:57:26 +0100</pubDate>
      <guid>http://localhost:1313/personal-projects/wavefunctioncollapse/</guid>
      <description>I knew that I wanted to implement a procedural algorithm for my latest project, and decided on creating a wave function collapse algorithm as it seemed like a good starting point for learning more advanced procedural algorithms. To add more challenge to this, I wasn&amp;rsquo;t using it for generating maps, or textures but instead wanted it to interact with choosing which items to spawn into the map based on a variety of factors that were not known when starting the implementation.</description>
    </item>
    <item>
      <title>Unannounced</title>
      <link>http://localhost:1313/professional-projects/unannounced/</link>
      <pubDate>Tue, 03 Sep 2024 14:27:52 +0100</pubDate>
      <guid>http://localhost:1313/professional-projects/unannounced/</guid>
      <description>This project is yet to be announced, but since it is my own project I&amp;rsquo;m more than happy and able to share about my involvement.&#xA;Role: Lead Developer In this personal project, I’ve taken on multiple roles, including programmer, designer, modeller, and project manager. Over the past year, I have been dedicated to creating a social deduction game set in Victorian London, inspired by titles like Among Us. As the sole developer, I’ve been responsible for building every aspect of the game, with a strong focus on technical implementation.</description>
    </item>
    <item>
      <title>AUDL</title>
      <link>http://localhost:1313/professional-projects/audl/</link>
      <pubDate>Sun, 25 Aug 2024 14:27:36 +0100</pubDate>
      <guid>http://localhost:1313/professional-projects/audl/</guid>
      <description>Role: Gameplay Developer at Ultix Technology In my role at Ultix Technology, I have been instrumental in the development of key gameplay systems, focusing on both single-player and multiplayer functionality. By balancing technical precision and creativity, I ensure seamless user experiences across different game modes. My expertise extends beyond development, enabling me to lead and mentor team members on best practices and innovative approaches in Unreal Engine.&#xA;Unreal Engine (C++ and Blueprints) I utilize both C++ and Unreal Engine Blueprints, allowing me to optimize the workflow and accelerate design iteration.</description>
    </item>
    <item>
      <title>Optimisation</title>
      <link>http://localhost:1313/tutorials/optimisation/</link>
      <pubDate>Sun, 25 Aug 2024 14:19:50 +0100</pubDate>
      <guid>http://localhost:1313/tutorials/optimisation/</guid>
      <description>Unreal Engine Optimisation Optimisation in Unreal Engine has a few different aspects to it, from optimising the code to optimising the assets. This tutorial will cover some of the ways you can optimise your Unreal Engine project to improve performance.&#xA;First thing to keep in mind is that this is going to cover generic optimisation as each project is different and may require different optimisation techniques.&#xA;Unreal Insights Unreal Insights is a tool that can help you identify performance issues in your project.</description>
    </item>
    <item>
      <title>Custom Target.cs files and why you should use them</title>
      <link>http://localhost:1313/tutorials/target_cs/</link>
      <pubDate>Fri, 05 Jul 2024 14:19:39 +0100</pubDate>
      <guid>http://localhost:1313/tutorials/target_cs/</guid>
      <description>Background For my current project, I&amp;rsquo;ve implemented EOS and EOSPlus so I can support crossplay and have an easy multiplayer solution. The main problem I&amp;rsquo;ve been facing recently though was the ability to target both EOS and Steam independently from each other, and without altering the Config/DefaultEngine.ini directly each time I wanted to make a build for each storefront.&#xA;As they use the same Platform (Windows, Linux, Mac, etc), I couldn&amp;rsquo;t easily rely on Platform Configs.</description>
    </item>
    <item>
      <title>Multiplayer Quest System - Unreal Engine 5</title>
      <link>http://localhost:1313/personal-projects/quest-system/</link>
      <pubDate>Sun, 21 Apr 2024 11:57:22 +0100</pubDate>
      <guid>http://localhost:1313/personal-projects/quest-system/</guid>
      <description>Multiplayer Quest System I decided to challenge myself by creating a multiplayer quest system. I wanted to create a system that would allow for a variety of quest types &amp;amp; quest rewards, and be able to handle multiple players.&#xA;The approach I went for was a very Object-Oriented one. Everything is split up into different classes that will handle the different aspects of the quest system. Quests contain stages which hold Objectives, which hold a set of prerequisites and rewards and they can track the progress via a Progress Object.</description>
    </item>
    <item>
      <title>Multiplayer Inventory &amp; Crafting - Unreal Engine 5</title>
      <link>http://localhost:1313/personal-projects/inventory/</link>
      <pubDate>Tue, 16 Jan 2024 11:57:04 +0100</pubDate>
      <guid>http://localhost:1313/personal-projects/inventory/</guid>
      <description>I have been working on a project that involves an inventory and crafting system. I have been using Unreal Engine 5 and C++ to create this system.&#xA;This system will need to be functional for multiplayer, easy to extend and easy to use. I have been using a lot of the built-in Unreal Engine features to make this system as robust as possible.&#xA;I have integrated the systems into the Editor and made it easy to create new items and recipes.</description>
    </item>
    <item>
      <title>Data Engineering</title>
      <link>http://localhost:1313/university-projects/data-engineering/</link>
      <pubDate>Tue, 05 Sep 2023 11:46:29 +0100</pubDate>
      <guid>http://localhost:1313/university-projects/data-engineering/</guid>
      <description>Storyplaces I was employed as a placement with my University. I was given a goal to present my analysis findings to a group of PhD students, and to help me with this my manager gave me a list of tasks that needed doing from the weekly level, with an individual list of goals for each week. I used primarily Python and more specifically Pandas for this project.&#xA;For the first week it was purely exploratory analysis, finding basic things out like how many users on any given day, how long did each user spend on average, etc.</description>
    </item>
    <item>
      <title>GoldenTides</title>
      <link>http://localhost:1313/professional-projects/goldentides/</link>
      <pubDate>Fri, 02 Jun 2023 14:27:41 +0100</pubDate>
      <guid>http://localhost:1313/professional-projects/goldentides/</guid>
      <description>Role: Unreal Engineer In my role as an Unreal Engineer for Golden Tides, I was tasked with designing and implementing code to meet both technical requirements and gameplay goals. A primary focus was ensuring that the code could scale effectively and maintain functionality within multiplayer environments. Although I had limited prior experience with networking in Unreal Engine, I embraced this challenge, growing significantly as a developer throughout the project.&#xA;Multiplayer Networking Despite being new to Unreal Engine&amp;rsquo;s networking systems at the start, I quickly adapted and implemented multiplayer features that supported seamless gameplay.</description>
    </item>
    <item>
      <title>Custom EQS Test</title>
      <link>http://localhost:1313/tutorials/custom-eqs-test/</link>
      <pubDate>Tue, 16 May 2023 14:19:16 +0100</pubDate>
      <guid>http://localhost:1313/tutorials/custom-eqs-test/</guid>
      <description>EQS (Environment Query System) is a powerful tool when making an AI in Unreal Engine. Creating your own EQS Tests can open the way for more advanced interactions and more intelligent decision making.&#xA;In this tutorial, we will be making an EQS Test that can get a value from an actor using an interface.&#xA;EQS Test We will start by making a C++ Class:&#xA;Expand out the All Actors and search for EnvQueryTest</description>
    </item>
    <item>
      <title>Equine VR</title>
      <link>http://localhost:1313/university-projects/equine-vr/</link>
      <pubDate>Mon, 05 Sep 2022 10:58:17 +0100</pubDate>
      <guid>http://localhost:1313/university-projects/equine-vr/</guid>
      <description>Equine VR This was the main job I did over the summer of 2022, working at the University developing a VR project.&#xA;The aim of this project was to produce a prototype AI horse that could respond to 3 parameters in a realistic manner. These were:&#xA;Focus - Where you are looking and how hard you are looking at it Ask - How much energy you are bringing into yourself Neutral - How you are behaving around the horse These might not be the best definitions, but the more important component is how the horse should respond to these parameters</description>
    </item>
    <item>
      <title>Pervasive Gaming</title>
      <link>http://localhost:1313/university-projects/pervasive-gaming/</link>
      <pubDate>Mon, 21 Feb 2022 11:50:57 +0100</pubDate>
      <guid>http://localhost:1313/university-projects/pervasive-gaming/</guid>
      <description>University Module - Pervasive Gaming Github Repo&#xA;This unit was one of my favourites at University, as it was a challenge to create a game without the traditional inputs that are the norm in the industry. I had set myself a self imposed goal of developing the game without using mouse or keyboard or gamepad as inputs, but instead use Hand Gestures using UltraLeap, alongside Voice Recognition using the built in libraries as well eye tracking as a stretch goal.</description>
    </item>
  </channel>
</rss>
